// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: tensorflow_federated/proto/v0/executor.proto

package v0

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cardinality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placement   *Placement `protobuf:"bytes,1,opt,name=placement,proto3" json:"placement,omitempty"`
	Cardinality int32      `protobuf:"varint,2,opt,name=cardinality,proto3" json:"cardinality,omitempty"`
}

func (x *Cardinality) Reset() {
	*x = Cardinality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cardinality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cardinality) ProtoMessage() {}

func (x *Cardinality) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cardinality.ProtoReflect.Descriptor instead.
func (*Cardinality) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{0}
}

func (x *Cardinality) GetPlacement() *Placement {
	if x != nil {
		return x.Placement
	}
	return nil
}

func (x *Cardinality) GetCardinality() int32 {
	if x != nil {
		return x.Cardinality
	}
	return 0
}

type GetExecutorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cardinalities []*Cardinality `protobuf:"bytes,1,rep,name=cardinalities,proto3" json:"cardinalities,omitempty"`
}

func (x *GetExecutorRequest) Reset() {
	*x = GetExecutorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutorRequest) ProtoMessage() {}

func (x *GetExecutorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutorRequest.ProtoReflect.Descriptor instead.
func (*GetExecutorRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{1}
}

func (x *GetExecutorRequest) GetCardinalities() []*Cardinality {
	if x != nil {
		return x.Cardinalities
	}
	return nil
}

type GetExecutorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executor *ExecutorId `protobuf:"bytes,1,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *GetExecutorResponse) Reset() {
	*x = GetExecutorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutorResponse) ProtoMessage() {}

func (x *GetExecutorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutorResponse.ProtoReflect.Descriptor instead.
func (*GetExecutorResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{2}
}

func (x *GetExecutorResponse) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

// An identifier for a particular executor within an `ExecutorGroup`.
type ExecutorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExecutorId) Reset() {
	*x = ExecutorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorId) ProtoMessage() {}

func (x *ExecutorId) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorId.ProtoReflect.Descriptor instead.
func (*ExecutorId) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutorId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    *Value      `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Executor *ExecutorId `protobuf:"bytes,2,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *CreateValueRequest) Reset() {
	*x = CreateValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateValueRequest) ProtoMessage() {}

func (x *CreateValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateValueRequest.ProtoReflect.Descriptor instead.
func (*CreateValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{4}
}

func (x *CreateValueRequest) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CreateValueRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type CreateValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueRef *ValueRef `protobuf:"bytes,1,opt,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
}

func (x *CreateValueResponse) Reset() {
	*x = CreateValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateValueResponse) ProtoMessage() {}

func (x *CreateValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateValueResponse.ProtoReflect.Descriptor instead.
func (*CreateValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{5}
}

func (x *CreateValueResponse) GetValueRef() *ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

type CreateCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the function to be called (which must be obtained from a
	// prior call to `CreateValue()`).
	FunctionRef *ValueRef `protobuf:"bytes,1,opt,name=function_ref,json=functionRef,proto3" json:"function_ref,omitempty"`
	// An optional argument, only for functions that declare an argument.
	ArgumentRef *ValueRef   `protobuf:"bytes,2,opt,name=argument_ref,json=argumentRef,proto3" json:"argument_ref,omitempty"`
	Executor    *ExecutorId `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *CreateCallRequest) Reset() {
	*x = CreateCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallRequest) ProtoMessage() {}

func (x *CreateCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallRequest.ProtoReflect.Descriptor instead.
func (*CreateCallRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCallRequest) GetFunctionRef() *ValueRef {
	if x != nil {
		return x.FunctionRef
	}
	return nil
}

func (x *CreateCallRequest) GetArgumentRef() *ValueRef {
	if x != nil {
		return x.ArgumentRef
	}
	return nil
}

func (x *CreateCallRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type CreateCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueRef *ValueRef `protobuf:"bytes,1,opt,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
}

func (x *CreateCallResponse) Reset() {
	*x = CreateCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCallResponse) ProtoMessage() {}

func (x *CreateCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCallResponse.ProtoReflect.Descriptor instead.
func (*CreateCallResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCallResponse) GetValueRef() *ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

type CreateStructRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element  []*CreateStructRequest_Element `protobuf:"bytes,1,rep,name=element,proto3" json:"element,omitempty"`
	Executor *ExecutorId                    `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *CreateStructRequest) Reset() {
	*x = CreateStructRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStructRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStructRequest) ProtoMessage() {}

func (x *CreateStructRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStructRequest.ProtoReflect.Descriptor instead.
func (*CreateStructRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{8}
}

func (x *CreateStructRequest) GetElement() []*CreateStructRequest_Element {
	if x != nil {
		return x.Element
	}
	return nil
}

func (x *CreateStructRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type CreateStructResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueRef *ValueRef `protobuf:"bytes,1,opt,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
}

func (x *CreateStructResponse) Reset() {
	*x = CreateStructResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStructResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStructResponse) ProtoMessage() {}

func (x *CreateStructResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStructResponse.ProtoReflect.Descriptor instead.
func (*CreateStructResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{9}
}

func (x *CreateStructResponse) GetValueRef() *ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

type CreateSelectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceRef *ValueRef   `protobuf:"bytes,1,opt,name=source_ref,json=sourceRef,proto3" json:"source_ref,omitempty"`
	Index     int32       `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Executor  *ExecutorId `protobuf:"bytes,4,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *CreateSelectionRequest) Reset() {
	*x = CreateSelectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSelectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelectionRequest) ProtoMessage() {}

func (x *CreateSelectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelectionRequest.ProtoReflect.Descriptor instead.
func (*CreateSelectionRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSelectionRequest) GetSourceRef() *ValueRef {
	if x != nil {
		return x.SourceRef
	}
	return nil
}

func (x *CreateSelectionRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateSelectionRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type CreateSelectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueRef *ValueRef `protobuf:"bytes,1,opt,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
}

func (x *CreateSelectionResponse) Reset() {
	*x = CreateSelectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSelectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelectionResponse) ProtoMessage() {}

func (x *CreateSelectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelectionResponse.ProtoReflect.Descriptor instead.
func (*CreateSelectionResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSelectionResponse) GetValueRef() *ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

type ComputeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueRef *ValueRef   `protobuf:"bytes,1,opt,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
	Executor *ExecutorId `protobuf:"bytes,2,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *ComputeRequest) Reset() {
	*x = ComputeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeRequest) ProtoMessage() {}

func (x *ComputeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeRequest.ProtoReflect.Descriptor instead.
func (*ComputeRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{12}
}

func (x *ComputeRequest) GetValueRef() *ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

func (x *ComputeRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type ComputeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ComputeResponse) Reset() {
	*x = ComputeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResponse) ProtoMessage() {}

func (x *ComputeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResponse.ProtoReflect.Descriptor instead.
func (*ComputeResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{13}
}

func (x *ComputeResponse) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type DisposeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueRef []*ValueRef `protobuf:"bytes,1,rep,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
	Executor *ExecutorId `protobuf:"bytes,2,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *DisposeRequest) Reset() {
	*x = DisposeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisposeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisposeRequest) ProtoMessage() {}

func (x *DisposeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisposeRequest.ProtoReflect.Descriptor instead.
func (*DisposeRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{14}
}

func (x *DisposeRequest) GetValueRef() []*ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

func (x *DisposeRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type DisposeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisposeResponse) Reset() {
	*x = DisposeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisposeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisposeResponse) ProtoMessage() {}

func (x *DisposeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisposeResponse.ProtoReflect.Descriptor instead.
func (*DisposeResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{15}
}

type DisposeExecutorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Executor *ExecutorId `protobuf:"bytes,1,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *DisposeExecutorRequest) Reset() {
	*x = DisposeExecutorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisposeExecutorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisposeExecutorRequest) ProtoMessage() {}

func (x *DisposeExecutorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisposeExecutorRequest.ProtoReflect.Descriptor instead.
func (*DisposeExecutorRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{16}
}

func (x *DisposeExecutorRequest) GetExecutor() *ExecutorId {
	if x != nil {
		return x.Executor
	}
	return nil
}

type DisposeExecutorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisposeExecutorResponse) Reset() {
	*x = DisposeExecutorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisposeExecutorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisposeExecutorResponse) ProtoMessage() {}

func (x *DisposeExecutorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisposeExecutorResponse.ProtoReflect.Descriptor instead.
func (*DisposeExecutorResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{17}
}

// A representation of a value that's to be embedded in the executor, or that
// is being returned as a result of a computation.
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Value_Tensor
	//	*Value_Computation
	//	*Value_Struct_
	//	*Value_Sequence_
	//	*Value_Federated_
	Value isValue_Value `protobuf_oneof:"value"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{18}
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetTensor() *anypb.Any {
	if x, ok := x.GetValue().(*Value_Tensor); ok {
		return x.Tensor
	}
	return nil
}

func (x *Value) GetComputation() *Computation {
	if x, ok := x.GetValue().(*Value_Computation); ok {
		return x.Computation
	}
	return nil
}

func (x *Value) GetStruct() *Value_Struct {
	if x, ok := x.GetValue().(*Value_Struct_); ok {
		return x.Struct
	}
	return nil
}

func (x *Value) GetSequence() *Value_Sequence {
	if x, ok := x.GetValue().(*Value_Sequence_); ok {
		return x.Sequence
	}
	return nil
}

func (x *Value) GetFederated() *Value_Federated {
	if x, ok := x.GetValue().(*Value_Federated_); ok {
		return x.Federated
	}
	return nil
}

type isValue_Value interface {
	isValue_Value()
}

type Value_Tensor struct {
	// A serialized tensor content as an instance of `tensorflow.TensorProto`,
	// as defined in `tensorflow/core/framework/tensor.proto`.
	Tensor *anypb.Any `protobuf:"bytes,1,opt,name=tensor,proto3,oneof"`
}

type Value_Computation struct {
	// A serialized TFF computation; this is the canonical (and currently only)
	// way to pass any functional constructs, but the computation included here
	// does not necessarily have to be of a functional type.
	Computation *Computation `protobuf:"bytes,2,opt,name=computation,proto3,oneof"`
}

type Value_Struct_ struct {
	// A struct of values.
	Struct *Value_Struct `protobuf:"bytes,3,opt,name=struct,proto3,oneof"`
}

type Value_Sequence_ struct {
	// A sequence of values.
	Sequence *Value_Sequence `protobuf:"bytes,4,opt,name=sequence,proto3,oneof"`
}

type Value_Federated_ struct {
	// A value of a federated type.
	Federated *Value_Federated `protobuf:"bytes,5,opt,name=federated,proto3,oneof"`
}

func (*Value_Tensor) isValue_Value() {}

func (*Value_Computation) isValue_Value() {}

func (*Value_Struct_) isValue_Value() {}

func (*Value_Sequence_) isValue_Value() {}

func (*Value_Federated_) isValue_Value() {}

// A reference to a value embedded in the executor, guaranteed to be unique
// at a minimum among all the values that have been embedded in this executor
// instance (but not guaranteed to be unique globally across the network),
// across the agreed-upon lifetime of the service (at the very least, reboots
// of the backend instance while the client is running should not result in
// name clashes). In the context of a simulation, the service lifetime should
// at minimum span the lifetime of the entire simulation.
type ValueRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier should consist of printable ASCII characters for the sake
	// of debuggability, ideally alphanumeric. The format of the identifier may
	// depend on the type of the executor.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ValueRef) Reset() {
	*x = ValueRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueRef) ProtoMessage() {}

func (x *ValueRef) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueRef.ProtoReflect.Descriptor instead.
func (*ValueRef) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{19}
}

func (x *ValueRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateStructRequest_Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ValueRef *ValueRef `protobuf:"bytes,2,opt,name=value_ref,json=valueRef,proto3" json:"value_ref,omitempty"`
}

func (x *CreateStructRequest_Element) Reset() {
	*x = CreateStructRequest_Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStructRequest_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStructRequest_Element) ProtoMessage() {}

func (x *CreateStructRequest_Element) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStructRequest_Element.ProtoReflect.Descriptor instead.
func (*CreateStructRequest_Element) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CreateStructRequest_Element) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStructRequest_Element) GetValueRef() *ValueRef {
	if x != nil {
		return x.ValueRef
	}
	return nil
}

// A representation of a struct of values. Unlike in the computation proto,
// elements of this struct can contain actual computed values such as
// serialized tensors (rather than computations).
type Value_Struct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element []*Value_Struct_Element `protobuf:"bytes,1,rep,name=element,proto3" json:"element,omitempty"`
}

func (x *Value_Struct) Reset() {
	*x = Value_Struct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value_Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value_Struct) ProtoMessage() {}

func (x *Value_Struct) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value_Struct.ProtoReflect.Descriptor instead.
func (*Value_Struct) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Value_Struct) GetElement() []*Value_Struct_Element {
	if x != nil {
		return x.Element
	}
	return nil
}

// A representation of a sequence value.
// This message holds its type annotation because the underlying serialization
// provided by TensorFlow does not preserve the ordering of keys for sequences
// of `StructType`.
type Value_Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The serialized representation of this sequence.
	//
	// Types that are assignable to Value:
	//	*Value_Sequence_ZippedSavedModel
	//	*Value_Sequence_SerializedGraphDef
	Value isValue_Sequence_Value `protobuf_oneof:"value"`
	// The TensorFlow Federated `Type` of the elements in this
	// sequence.
	ElementType *Type `protobuf:"bytes,2,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
}

func (x *Value_Sequence) Reset() {
	*x = Value_Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value_Sequence) ProtoMessage() {}

func (x *Value_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value_Sequence.ProtoReflect.Descriptor instead.
func (*Value_Sequence) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{18, 1}
}

func (m *Value_Sequence) GetValue() isValue_Sequence_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Deprecated: Do not use.
func (x *Value_Sequence) GetZippedSavedModel() []byte {
	if x, ok := x.GetValue().(*Value_Sequence_ZippedSavedModel); ok {
		return x.ZippedSavedModel
	}
	return nil
}

func (x *Value_Sequence) GetSerializedGraphDef() []byte {
	if x, ok := x.GetValue().(*Value_Sequence_SerializedGraphDef); ok {
		return x.SerializedGraphDef
	}
	return nil
}

func (x *Value_Sequence) GetElementType() *Type {
	if x != nil {
		return x.ElementType
	}
	return nil
}

type isValue_Sequence_Value interface {
	isValue_Sequence_Value()
}

type Value_Sequence_ZippedSavedModel struct {
	// The bytes of a zip file over the files produced by a
	// `tf.saved_model.save()` operation, intended to be used with a
	// corresponding `tf.saved_model.load()` op.
	//
	// Deprecated: Do not use.
	ZippedSavedModel []byte `protobuf:"bytes,1,opt,name=zipped_saved_model,json=zippedSavedModel,proto3,oneof"`
}

type Value_Sequence_SerializedGraphDef struct {
	// The result of the `DatasetToGraphV2` op called on a Dataset's variant
	// tensor.
	SerializedGraphDef []byte `protobuf:"bytes,3,opt,name=serialized_graph_def,json=serializedGraphDef,proto3,oneof"`
}

func (*Value_Sequence_ZippedSavedModel) isValue_Sequence_Value() {}

func (*Value_Sequence_SerializedGraphDef) isValue_Sequence_Value() {}

// A representation of a federated value.
type Value_Federated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the federated value.
	Type *FederatedType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The member constituents, one per participant in the collective defined
	// by this value's placement within the executor.
	Value []*Value `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *Value_Federated) Reset() {
	*x = Value_Federated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value_Federated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value_Federated) ProtoMessage() {}

func (x *Value_Federated) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value_Federated.ProtoReflect.Descriptor instead.
func (*Value_Federated) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{18, 2}
}

func (x *Value_Federated) GetType() *FederatedType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Value_Federated) GetValue() []*Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Value_Struct_Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Value_Struct_Element) Reset() {
	*x = Value_Struct_Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value_Struct_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value_Struct_Element) ProtoMessage() {}

func (x *Value_Struct_Element) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_federated_proto_v0_executor_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value_Struct_Element.ProtoReflect.Descriptor instead.
func (*Value_Struct_Element) Descriptor() ([]byte, []int) {
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP(), []int{18, 0, 0}
}

func (x *Value_Struct_Element) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Value_Struct_Element) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_tensorflow_federated_proto_v0_executor_proto protoreflect.FileDescriptor

var file_tensorflow_federated_proto_v0_executor_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x30, 0x2f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x30, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x60, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0d,
	0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x22, 0x1c, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8b,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x55, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x66, 0x22, 0xe0, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12,
	0x44, 0x0a, 0x0c, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x3f, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76,
	0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x22, 0x85, 0x02, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x08, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x5d, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76,
	0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x66, 0x22, 0x56, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x22, 0xb1, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x3f, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x22, 0x59, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x22, 0x91, 0x01, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x12, 0x3f,
	0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22,
	0x47, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73,
	0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x12, 0x3f, 0x0a, 0x08, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x11, 0x0a, 0x0f,
	0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x59, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x69,
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc4, 0x06, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12,
	0x48, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x48, 0x0a, 0x09, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x09, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x1a, 0xa6, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76,
	0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x53, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xbd, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x32, 0x0a, 0x12, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x73, 0x61, 0x76, 0x65,
	0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02, 0x18,
	0x01, 0x48, 0x00, 0x52, 0x10, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x61, 0x76, 0x65, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x12, 0x40, 0x0a, 0x0c, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x7d, 0x0a, 0x09, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x08,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xef, 0x06, 0x0a, 0x0d, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x6a, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x2b, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x2a, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x12, 0x27, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x27, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x76, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x30,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tensorflow_federated_proto_v0_executor_proto_rawDescOnce sync.Once
	file_tensorflow_federated_proto_v0_executor_proto_rawDescData = file_tensorflow_federated_proto_v0_executor_proto_rawDesc
)

func file_tensorflow_federated_proto_v0_executor_proto_rawDescGZIP() []byte {
	file_tensorflow_federated_proto_v0_executor_proto_rawDescOnce.Do(func() {
		file_tensorflow_federated_proto_v0_executor_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_federated_proto_v0_executor_proto_rawDescData)
	})
	return file_tensorflow_federated_proto_v0_executor_proto_rawDescData
}

var file_tensorflow_federated_proto_v0_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_tensorflow_federated_proto_v0_executor_proto_goTypes = []interface{}{
	(*Cardinality)(nil),                 // 0: tensorflow_federated.v0.Cardinality
	(*GetExecutorRequest)(nil),          // 1: tensorflow_federated.v0.GetExecutorRequest
	(*GetExecutorResponse)(nil),         // 2: tensorflow_federated.v0.GetExecutorResponse
	(*ExecutorId)(nil),                  // 3: tensorflow_federated.v0.ExecutorId
	(*CreateValueRequest)(nil),          // 4: tensorflow_federated.v0.CreateValueRequest
	(*CreateValueResponse)(nil),         // 5: tensorflow_federated.v0.CreateValueResponse
	(*CreateCallRequest)(nil),           // 6: tensorflow_federated.v0.CreateCallRequest
	(*CreateCallResponse)(nil),          // 7: tensorflow_federated.v0.CreateCallResponse
	(*CreateStructRequest)(nil),         // 8: tensorflow_federated.v0.CreateStructRequest
	(*CreateStructResponse)(nil),        // 9: tensorflow_federated.v0.CreateStructResponse
	(*CreateSelectionRequest)(nil),      // 10: tensorflow_federated.v0.CreateSelectionRequest
	(*CreateSelectionResponse)(nil),     // 11: tensorflow_federated.v0.CreateSelectionResponse
	(*ComputeRequest)(nil),              // 12: tensorflow_federated.v0.ComputeRequest
	(*ComputeResponse)(nil),             // 13: tensorflow_federated.v0.ComputeResponse
	(*DisposeRequest)(nil),              // 14: tensorflow_federated.v0.DisposeRequest
	(*DisposeResponse)(nil),             // 15: tensorflow_federated.v0.DisposeResponse
	(*DisposeExecutorRequest)(nil),      // 16: tensorflow_federated.v0.DisposeExecutorRequest
	(*DisposeExecutorResponse)(nil),     // 17: tensorflow_federated.v0.DisposeExecutorResponse
	(*Value)(nil),                       // 18: tensorflow_federated.v0.Value
	(*ValueRef)(nil),                    // 19: tensorflow_federated.v0.ValueRef
	(*CreateStructRequest_Element)(nil), // 20: tensorflow_federated.v0.CreateStructRequest.Element
	(*Value_Struct)(nil),                // 21: tensorflow_federated.v0.Value.Struct
	(*Value_Sequence)(nil),              // 22: tensorflow_federated.v0.Value.Sequence
	(*Value_Federated)(nil),             // 23: tensorflow_federated.v0.Value.Federated
	(*Value_Struct_Element)(nil),        // 24: tensorflow_federated.v0.Value.Struct.Element
	(*Placement)(nil),                   // 25: tensorflow_federated.v0.Placement
	(*anypb.Any)(nil),                   // 26: google.protobuf.Any
	(*Computation)(nil),                 // 27: tensorflow_federated.v0.Computation
	(*Type)(nil),                        // 28: tensorflow_federated.v0.Type
	(*FederatedType)(nil),               // 29: tensorflow_federated.v0.FederatedType
}
var file_tensorflow_federated_proto_v0_executor_proto_depIdxs = []int32{
	25, // 0: tensorflow_federated.v0.Cardinality.placement:type_name -> tensorflow_federated.v0.Placement
	0,  // 1: tensorflow_federated.v0.GetExecutorRequest.cardinalities:type_name -> tensorflow_federated.v0.Cardinality
	3,  // 2: tensorflow_federated.v0.GetExecutorResponse.executor:type_name -> tensorflow_federated.v0.ExecutorId
	18, // 3: tensorflow_federated.v0.CreateValueRequest.value:type_name -> tensorflow_federated.v0.Value
	3,  // 4: tensorflow_federated.v0.CreateValueRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	19, // 5: tensorflow_federated.v0.CreateValueResponse.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	19, // 6: tensorflow_federated.v0.CreateCallRequest.function_ref:type_name -> tensorflow_federated.v0.ValueRef
	19, // 7: tensorflow_federated.v0.CreateCallRequest.argument_ref:type_name -> tensorflow_federated.v0.ValueRef
	3,  // 8: tensorflow_federated.v0.CreateCallRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	19, // 9: tensorflow_federated.v0.CreateCallResponse.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	20, // 10: tensorflow_federated.v0.CreateStructRequest.element:type_name -> tensorflow_federated.v0.CreateStructRequest.Element
	3,  // 11: tensorflow_federated.v0.CreateStructRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	19, // 12: tensorflow_federated.v0.CreateStructResponse.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	19, // 13: tensorflow_federated.v0.CreateSelectionRequest.source_ref:type_name -> tensorflow_federated.v0.ValueRef
	3,  // 14: tensorflow_federated.v0.CreateSelectionRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	19, // 15: tensorflow_federated.v0.CreateSelectionResponse.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	19, // 16: tensorflow_federated.v0.ComputeRequest.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	3,  // 17: tensorflow_federated.v0.ComputeRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	18, // 18: tensorflow_federated.v0.ComputeResponse.value:type_name -> tensorflow_federated.v0.Value
	19, // 19: tensorflow_federated.v0.DisposeRequest.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	3,  // 20: tensorflow_federated.v0.DisposeRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	3,  // 21: tensorflow_federated.v0.DisposeExecutorRequest.executor:type_name -> tensorflow_federated.v0.ExecutorId
	26, // 22: tensorflow_federated.v0.Value.tensor:type_name -> google.protobuf.Any
	27, // 23: tensorflow_federated.v0.Value.computation:type_name -> tensorflow_federated.v0.Computation
	21, // 24: tensorflow_federated.v0.Value.struct:type_name -> tensorflow_federated.v0.Value.Struct
	22, // 25: tensorflow_federated.v0.Value.sequence:type_name -> tensorflow_federated.v0.Value.Sequence
	23, // 26: tensorflow_federated.v0.Value.federated:type_name -> tensorflow_federated.v0.Value.Federated
	19, // 27: tensorflow_federated.v0.CreateStructRequest.Element.value_ref:type_name -> tensorflow_federated.v0.ValueRef
	24, // 28: tensorflow_federated.v0.Value.Struct.element:type_name -> tensorflow_federated.v0.Value.Struct.Element
	28, // 29: tensorflow_federated.v0.Value.Sequence.element_type:type_name -> tensorflow_federated.v0.Type
	29, // 30: tensorflow_federated.v0.Value.Federated.type:type_name -> tensorflow_federated.v0.FederatedType
	18, // 31: tensorflow_federated.v0.Value.Federated.value:type_name -> tensorflow_federated.v0.Value
	18, // 32: tensorflow_federated.v0.Value.Struct.Element.value:type_name -> tensorflow_federated.v0.Value
	1,  // 33: tensorflow_federated.v0.ExecutorGroup.GetExecutor:input_type -> tensorflow_federated.v0.GetExecutorRequest
	4,  // 34: tensorflow_federated.v0.ExecutorGroup.CreateValue:input_type -> tensorflow_federated.v0.CreateValueRequest
	6,  // 35: tensorflow_federated.v0.ExecutorGroup.CreateCall:input_type -> tensorflow_federated.v0.CreateCallRequest
	8,  // 36: tensorflow_federated.v0.ExecutorGroup.CreateStruct:input_type -> tensorflow_federated.v0.CreateStructRequest
	10, // 37: tensorflow_federated.v0.ExecutorGroup.CreateSelection:input_type -> tensorflow_federated.v0.CreateSelectionRequest
	12, // 38: tensorflow_federated.v0.ExecutorGroup.Compute:input_type -> tensorflow_federated.v0.ComputeRequest
	14, // 39: tensorflow_federated.v0.ExecutorGroup.Dispose:input_type -> tensorflow_federated.v0.DisposeRequest
	16, // 40: tensorflow_federated.v0.ExecutorGroup.DisposeExecutor:input_type -> tensorflow_federated.v0.DisposeExecutorRequest
	2,  // 41: tensorflow_federated.v0.ExecutorGroup.GetExecutor:output_type -> tensorflow_federated.v0.GetExecutorResponse
	5,  // 42: tensorflow_federated.v0.ExecutorGroup.CreateValue:output_type -> tensorflow_federated.v0.CreateValueResponse
	7,  // 43: tensorflow_federated.v0.ExecutorGroup.CreateCall:output_type -> tensorflow_federated.v0.CreateCallResponse
	9,  // 44: tensorflow_federated.v0.ExecutorGroup.CreateStruct:output_type -> tensorflow_federated.v0.CreateStructResponse
	11, // 45: tensorflow_federated.v0.ExecutorGroup.CreateSelection:output_type -> tensorflow_federated.v0.CreateSelectionResponse
	13, // 46: tensorflow_federated.v0.ExecutorGroup.Compute:output_type -> tensorflow_federated.v0.ComputeResponse
	15, // 47: tensorflow_federated.v0.ExecutorGroup.Dispose:output_type -> tensorflow_federated.v0.DisposeResponse
	17, // 48: tensorflow_federated.v0.ExecutorGroup.DisposeExecutor:output_type -> tensorflow_federated.v0.DisposeExecutorResponse
	41, // [41:49] is the sub-list for method output_type
	33, // [33:41] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_tensorflow_federated_proto_v0_executor_proto_init() }
func file_tensorflow_federated_proto_v0_executor_proto_init() {
	if File_tensorflow_federated_proto_v0_executor_proto != nil {
		return
	}
	file_tensorflow_federated_proto_v0_computation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cardinality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStructRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStructResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSelectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSelectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisposeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisposeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisposeExecutorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisposeExecutorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStructRequest_Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value_Struct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value_Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value_Federated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_federated_proto_v0_executor_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value_Struct_Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tensorflow_federated_proto_v0_executor_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Value_Tensor)(nil),
		(*Value_Computation)(nil),
		(*Value_Struct_)(nil),
		(*Value_Sequence_)(nil),
		(*Value_Federated_)(nil),
	}
	file_tensorflow_federated_proto_v0_executor_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*Value_Sequence_ZippedSavedModel)(nil),
		(*Value_Sequence_SerializedGraphDef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_federated_proto_v0_executor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tensorflow_federated_proto_v0_executor_proto_goTypes,
		DependencyIndexes: file_tensorflow_federated_proto_v0_executor_proto_depIdxs,
		MessageInfos:      file_tensorflow_federated_proto_v0_executor_proto_msgTypes,
	}.Build()
	File_tensorflow_federated_proto_v0_executor_proto = out.File
	file_tensorflow_federated_proto_v0_executor_proto_rawDesc = nil
	file_tensorflow_federated_proto_v0_executor_proto_goTypes = nil
	file_tensorflow_federated_proto_v0_executor_proto_depIdxs = nil
}
